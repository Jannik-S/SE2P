<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_h_a_l_sensorik_8cpp" kind="file">
    <compoundname>HALSensorik.cpp</compoundname>
    <includes refid="_h_a_l_sensorik_8h" local="yes">HALSensorik.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="168">
        <label>stdint.h</label>
      </node>
      <node id="166">
        <label>Software/SE2P2/HAL/HALSensorik.cpp</label>
        <link refid="HALSensorik.cpp"/>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
      </node>
      <node id="171">
        <label>pthread.h</label>
      </node>
      <node id="173">
        <label>../Mutex/Mutex.h</label>
        <link refid="_mutex_8h"/>
        <childnode refid="171" relation="include">
        </childnode>
      </node>
      <node id="178">
        <label>unistd.h</label>
      </node>
      <node id="176">
        <label>hw/inout.h</label>
      </node>
      <node id="170">
        <label>iostream.h</label>
      </node>
      <node id="169">
        <label>../HAW/HAWThread.h</label>
        <link refid="_h_a_w_thread_8h"/>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
      </node>
      <node id="179">
        <label>time.h</label>
      </node>
      <node id="172">
        <label>sys/neutrino.h</label>
      </node>
      <node id="174">
        <label>../HAW/HWaccess.h</label>
        <link refid="_s_e2_p2_2_h_a_w_2_h_waccess_8h"/>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="177">
        <label>Addresses.h</label>
        <link refid="_addresses_8h"/>
      </node>
      <node id="167">
        <label>HALSensorik.h</label>
        <link refid="_h_a_l_sensorik_8h"/>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
      </node>
      <node id="175">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_h_a_l_sensorik_8cpp_1a33a30a4f7cfb0acfb9235996a7b8b1bc" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int isr_coid</definition>
        <argsstring></argsstring>
        <name>isr_coid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" line="15" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_h_a_l_sensorik_8cpp_1a153247227e81158a596178fa8572d2f5" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool portB_0</definition>
        <argsstring></argsstring>
        <name>portB_0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>boolen for Port Status </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" line="21" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_h_a_l_sensorik_8cpp_1a2d4d7151d6df474b0eb2e0835e7f7613" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool portB_1</definition>
        <argsstring></argsstring>
        <name>portB_1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" line="21" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_h_a_l_sensorik_8cpp_1a5aeb79703932d17fa3ccad34b717a478" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool portB_2</definition>
        <argsstring></argsstring>
        <name>portB_2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" line="21" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_h_a_l_sensorik_8cpp_1aadf44c74a3a9e00c979511323567712f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool portB_3</definition>
        <argsstring></argsstring>
        <name>portB_3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" line="21" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_h_a_l_sensorik_8cpp_1aa920050c1f72e5d2fdef3d80d92ebca6" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool portB_4</definition>
        <argsstring></argsstring>
        <name>portB_4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" line="21" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_h_a_l_sensorik_8cpp_1a6f74a2c0170a2264035efc500e4a8415" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool portB_5</definition>
        <argsstring></argsstring>
        <name>portB_5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" line="21" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_h_a_l_sensorik_8cpp_1a4732ea72458f90f4fa391d040a8f6308" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool portB_6</definition>
        <argsstring></argsstring>
        <name>portB_6</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" line="21" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_h_a_l_sensorik_8cpp_1abc4af542e02c2bf1a13ab929c823d44c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool portB_7</definition>
        <argsstring></argsstring>
        <name>portB_7</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" line="21" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_h_a_l_sensorik_8cpp_1a302d3cfc88c85036eccfae4dfb77afe1" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool portC_4</definition>
        <argsstring></argsstring>
        <name>portC_4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" line="22" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_h_a_l_sensorik_8cpp_1aafd8225eb3bb65a26e10d0c1e8886e05" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool portC_6</definition>
        <argsstring></argsstring>
        <name>portC_6</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" line="22" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_h_a_l_sensorik_8cpp_1a15ddead266e1de87d9de1627d86e1d30" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool portC_5</definition>
        <argsstring></argsstring>
        <name>portC_5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" line="22" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_h_a_l_sensorik_8cpp_1aca04d42cdb0529f43abaa1de8e6a2a28" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool portC_7</definition>
        <argsstring></argsstring>
        <name>portC_7</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" line="22" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_h_a_l_sensorik_8cpp_1a20a93d69d4c85d322500e6f8a6053b3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct sigevent *</type>
        <definition>struct sigevent* ISR</definition>
        <argsstring>(void *arg, int id)</argsstring>
        <name>ISR</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>switch case check where the bits are changend BIT_1 for Port B and BIT_3 for Port C</para>        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" line="24" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp" bodystart="24" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>HALSensorik.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>24.10.2013</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Jannik<sp/>Schick<sp/>(2063265)</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Philipp<sp/>Kloth<sp/>(2081738)</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rutkay<sp/>Kuepelikilinc<sp/>(2081831)</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Natalia<sp/>Duske<sp/>(2063265)</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_h_a_l_sensorik_8h" kindref="compound">HALSensorik.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isr_coid;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><ref refid="classhal_1_1_h_a_l_sensorik" kindref="compound">hal::HALSensorik</ref>*<sp/>hal::HALSensorik::instance<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="class_mutex" kindref="compound">Mutex</ref>*<sp/>hal::HALSensorik::HAL_Smutex<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_mutex" kindref="compound">Mutex</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_h_a_l_sensorik_8cpp_1a153247227e81158a596178fa8572d2f5" kindref="member">portB_0</ref>,<sp/><ref refid="_h_a_l_sensorik_8cpp_1a2d4d7151d6df474b0eb2e0835e7f7613" kindref="member">portB_1</ref>,<sp/><ref refid="_h_a_l_sensorik_8cpp_1a5aeb79703932d17fa3ccad34b717a478" kindref="member">portB_2</ref>,<sp/><ref refid="_h_a_l_sensorik_8cpp_1aadf44c74a3a9e00c979511323567712f" kindref="member">portB_3</ref>,<sp/><ref refid="_h_a_l_sensorik_8cpp_1aa920050c1f72e5d2fdef3d80d92ebca6" kindref="member">portB_4</ref>,<sp/><ref refid="_h_a_l_sensorik_8cpp_1a6f74a2c0170a2264035efc500e4a8415" kindref="member">portB_5</ref>,<sp/><ref refid="_h_a_l_sensorik_8cpp_1a4732ea72458f90f4fa391d040a8f6308" kindref="member">portB_6</ref>,<sp/><ref refid="_h_a_l_sensorik_8cpp_1abc4af542e02c2bf1a13ab929c823d44c" kindref="member">portB_7</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_h_a_l_sensorik_8cpp_1a302d3cfc88c85036eccfae4dfb77afe1" kindref="member">portC_4</ref>,<sp/><ref refid="_h_a_l_sensorik_8cpp_1aafd8225eb3bb65a26e10d0c1e8886e05" kindref="member">portC_6</ref>,<sp/><ref refid="_h_a_l_sensorik_8cpp_1a15ddead266e1de87d9de1627d86e1d30" kindref="member">portC_5</ref>,<sp/><ref refid="_h_a_l_sensorik_8cpp_1aca04d42cdb0529f43abaa1de8e6a2a28" kindref="member">portC_7</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sigevent*<sp/><ref refid="_h_a_l_sensorik_8cpp_1a20a93d69d4c85d322500e6f8a6053b3d" kindref="member">ISR</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>arg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sigevent<sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sigevent<sp/>*)<sp/>arg;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>val;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>state;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>state<sp/>=<sp/>in8(<ref refid="_addresses_8h_1a57314fe3306fd02b396aedcdc58749ec" kindref="member">DIO_BASE</ref><sp/>+<sp/><ref refid="_addresses_8h_1a3b52f0e29439f92226eb230c6f75d2f5" kindref="member">OFFS_INT_STATUS</ref>)<sp/>&amp;<sp/>(<ref refid="_addresses_8h_1aec9fa7211b7c9a686f2cd522cad7989d" kindref="member">BIT_1</ref><sp/>|<sp/><ref refid="_addresses_8h_1a2cad0186598ab53983a3bca9b09b0a51" kindref="member">BIT_3</ref>);</highlight><highlight class="comment">//read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>out8(<ref refid="_addresses_8h_1a57314fe3306fd02b396aedcdc58749ec" kindref="member">DIO_BASE</ref><sp/>+<sp/><ref refid="_addresses_8h_1a3b52f0e29439f92226eb230c6f75d2f5" kindref="member">OFFS_INT_STATUS</ref>,<sp/>0);</highlight><highlight class="comment">//reset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(state)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>(<ref refid="_addresses_8h_1aec9fa7211b7c9a686f2cd522cad7989d" kindref="member">BIT_1</ref><sp/>|<sp/><ref refid="_addresses_8h_1a2cad0186598ab53983a3bca9b09b0a51" kindref="member">BIT_3</ref>):</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>(in8(<ref refid="_addresses_8h_1a57314fe3306fd02b396aedcdc58749ec" kindref="member">DIO_BASE</ref><sp/>+<sp/><ref refid="_addresses_8h_1abc7b19477102fe9e63b88c77b0c16e24" kindref="member">DIO_OFFS_B</ref>)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(in8(<ref refid="_addresses_8h_1a57314fe3306fd02b396aedcdc58749ec" kindref="member">DIO_BASE</ref><sp/>+<sp/><ref refid="_addresses_8h_1a186d39b18319d4f9f9f500228760f89a" kindref="member">DIO_OFFS_C</ref>));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIGEV_PULSE_INIT(event,isr_coid,SIGEV_PULSE_PRIO_INHERIT,<sp/><ref refid="_addresses_8h_1a0b5b0eef49b4662eee6d6ca045e7539d" kindref="member">PB_STATUS</ref><sp/>|<sp/><ref refid="_addresses_8h_1a829d677f2fdcd0292167b481b9ead0e2" kindref="member">PC_STATUS</ref>,<sp/>val);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_addresses_8h_1aec9fa7211b7c9a686f2cd522cad7989d" kindref="member">BIT_1</ref>:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>in8(<ref refid="_addresses_8h_1a57314fe3306fd02b396aedcdc58749ec" kindref="member">DIO_BASE</ref><sp/>+<sp/><ref refid="_addresses_8h_1abc7b19477102fe9e63b88c77b0c16e24" kindref="member">DIO_OFFS_B</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIGEV_PULSE_INIT(event,isr_coid,SIGEV_PULSE_PRIO_INHERIT,<sp/><ref refid="_addresses_8h_1a0b5b0eef49b4662eee6d6ca045e7539d" kindref="member">PB_STATUS</ref>,<sp/>val);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_addresses_8h_1a2cad0186598ab53983a3bca9b09b0a51" kindref="member">BIT_3</ref>:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>in8(<ref refid="_addresses_8h_1a57314fe3306fd02b396aedcdc58749ec" kindref="member">DIO_BASE</ref><sp/>+<sp/><ref refid="_addresses_8h_1a186d39b18319d4f9f9f500228760f89a" kindref="member">DIO_OFFS_C</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIGEV_PULSE_INIT(event,isr_coid,SIGEV_PULSE_PRIO_INHERIT,<sp/><ref refid="_addresses_8h_1a829d677f2fdcd0292167b481b9ead0e2" kindref="member">PC_STATUS</ref>,<sp/>val);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>event;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">hal::HALSensorik::HALSensorik()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//make<sp/>sure<sp/>HAL<sp/>object<sp/>is<sp/>already<sp/>created</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>hal::HALSensorik::getInstance();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>initInterrupts();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//create<sp/>channel<sp/>for<sp/>dispatcher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>signalChid<sp/>=<sp/>ChannelCreate(0);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(signalChid<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Dispatcher:<sp/>ChannelCreate<sp/>signalChid<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//creats<sp/>connection<sp/>between<sp/>PC<sp/>Channel<sp/>and<sp/>Prozess</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>signalCoid<sp/>=<sp/>ConnectAttach(0,<sp/>0,<sp/>signalChid,<sp/>_NTO_SIDE_CHANNEL,<sp/>0);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(signalCoid<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Dispatcher:<sp/>ConnectAttach<sp/>signalCoid<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><ref refid="classhal_1_1_h_a_l_sensorik" kindref="compound">hal::HALSensorik</ref>*<sp/><ref refid="classhal_1_1_h_a_l_sensorik_1abc582093d8a3f9c78a1c975826ba1cc1" kindref="member">hal::HALSensorik::getInstance</ref>()<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_Smutex-&gt;lock();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(instance<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Zugriffsrechte<sp/>fuer<sp/>den<sp/>Zugriff<sp/>auf<sp/>die<sp/>HW<sp/>holen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-1<sp/>==<sp/>ThreadCtl(_NTO_TCTL_IO,<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;ThreadCtl<sp/>access<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>instance<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HALSensorik();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_Smutex-&gt;unlock();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="classhal_1_1_h_a_l_sensorik_1ada6e5356ac7cb8c825b2e29ce05fe577" kindref="member">hal::HALSensorik::~HALSensorik</ref>()<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>Auto-generated<sp/>destructor<sp/>stub</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal::HALSensorik::initInterrupts()<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>channel<sp/>to<sp/>recive<sp/>pulse<sp/>message<sp/>from<sp/>the<sp/>ISR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>isrChid<sp/>=<sp/>ChannelCreate(0);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isrChid<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;SensorikIntro:<sp/>ChannelCreate<sp/>isrChid<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>isr_coid<sp/>=<sp/>ConnectAttach(0,<sp/>0,<sp/>isrChid,<sp/>_NTO_SIDE_CHANNEL,<sp/>0);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isr_coid<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;SensorikIntro:<sp/>ConnectAttach<sp/>isr_coid<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>attach<sp/>ISRF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>SIGEV_PULSE_INIT(&amp;event,<sp/>isr_coid,<sp/>SIGEV_PULSE_PRIO_INHERIT,0,0);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>interruptId<sp/>=<sp/>InterruptAttach(11,<sp/><ref refid="_h_a_l_sensorik_8cpp_1a20a93d69d4c85d322500e6f8a6053b3d" kindref="member">ISR</ref>,<sp/>&amp;event,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(event),<sp/>0);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(interruptId<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;SensorikIntro:<sp/>ConnectAttach<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>configure<sp/>interrupts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//reset<sp/>irq<sp/>status<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>out8(<ref refid="_addresses_8h_1a57314fe3306fd02b396aedcdc58749ec" kindref="member">DIO_BASE</ref><sp/>+<sp/><ref refid="_addresses_8h_1a3b52f0e29439f92226eb230c6f75d2f5" kindref="member">OFFS_INT_STATUS</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>interrupts<sp/>for<sp/>all<sp/>ports<sp/>(Bit<sp/>0-5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>int_ctrl<sp/>=<sp/>in8(<ref refid="_addresses_8h_1a57314fe3306fd02b396aedcdc58749ec" kindref="member">DIO_BASE</ref><sp/>+<sp/><ref refid="_addresses_8h_1a831ee2c7b4d31fea5fde541c679babf6" kindref="member">OFFS_INT_CTRL</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>out8(<ref refid="_addresses_8h_1a57314fe3306fd02b396aedcdc58749ec" kindref="member">DIO_BASE</ref><sp/>+<sp/><ref refid="_addresses_8h_1a831ee2c7b4d31fea5fde541c679babf6" kindref="member">OFFS_INT_CTRL</ref>,<sp/>int_ctrl<sp/>|<sp/>0b00111111);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>interrupt<sp/>for<sp/>portB<sp/>und<sp/>portC<sp/>(Bit<sp/>1<sp/>und<sp/>2)<sp/>(S.<sp/>18)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>int_ctrl<sp/>=<sp/>in8(<ref refid="_addresses_8h_1a57314fe3306fd02b396aedcdc58749ec" kindref="member">DIO_BASE</ref><sp/>+<sp/><ref refid="_addresses_8h_1a831ee2c7b4d31fea5fde541c679babf6" kindref="member">OFFS_INT_CTRL</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>out8(<ref refid="_addresses_8h_1a57314fe3306fd02b396aedcdc58749ec" kindref="member">DIO_BASE</ref><sp/>+<sp/><ref refid="_addresses_8h_1a831ee2c7b4d31fea5fde541c679babf6" kindref="member">OFFS_INT_CTRL</ref>,<sp/>int_ctrl<sp/>&amp;<sp/>~(<ref refid="_addresses_8h_1a1c95e5f0dc750ae3419baba7ccda3fa5" kindref="member">PB_CTRL</ref><sp/>|<sp/><ref refid="_addresses_8h_1a28edef93d8feb032aa3c3c22fcec3b2b" kindref="member">PC_CTRL</ref>));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>out<sp/>port<sp/>B<sp/>and<sp/>C<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>portBstatus<sp/>=<sp/>in8(<ref refid="_addresses_8h_1a57314fe3306fd02b396aedcdc58749ec" kindref="member">DIO_BASE</ref><sp/>+<sp/><ref refid="_addresses_8h_1abc7b19477102fe9e63b88c77b0c16e24" kindref="member">DIO_OFFS_B</ref>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>portCstatus<sp/>=<sp/>in8(<ref refid="_addresses_8h_1a57314fe3306fd02b396aedcdc58749ec" kindref="member">DIO_BASE</ref><sp/>+<sp/><ref refid="_addresses_8h_1abc7b19477102fe9e63b88c77b0c16e24" kindref="member">DIO_OFFS_B</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1_h_a_l_sensorik_1ad6e436cb90415ce45f6ff9e0dc1fd257" kindref="member">hal::HALSensorik::stop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>HAWThread::stop();<sp/></highlight><highlight class="comment">//<sp/>super.stop();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ConnectDetach(isr_coid))<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;SensorCtrl:<sp/>ConnectDetatch<sp/>isr_coid<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ChannelDestroy(isrChid)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;SensorCtrl:<sp/>ChannelDestroy<sp/>isrChid<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//in<sp/>Simulation:<sp/>bleibt<sp/>hier<sp/>haengen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(InterruptDetach(interruptId)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;SensorCtrl:<sp/>InterruptDetach<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1_h_a_l_sensorik_1a71061f6dbeb0f7f4b5ab9cc29c97fbd5" kindref="member">hal::HALSensorik::shutdown</ref>()<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1_h_a_l_sensorik_1a6c51f9dbce318491f593d7040dd905d0" kindref="member">hal::HALSensorik::execute</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;|<sp/>code<sp/><sp/>|<sp/><sp/>&quot;<sp/>&lt;&lt;<sp/>&quot;value<sp/>|&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;|----------------|&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_pulse<sp/>pulse;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!isStopped())<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(-1<sp/>==<sp/>MsgReceivePulse(isrChid,<sp/>&amp;pulse,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pulse),<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isStopped())<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>channel<sp/>destroyed,<sp/>Thread<sp/>ending</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;SensorCtrl:<sp/>MsgReceivePulse&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printSensorChanges(pulse.code,<sp/>pulse.value.sival_int);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;|<sp/><sp/><sp/>%X<sp/><sp/><sp/>|<sp/><sp/><sp/>%2X<sp/><sp/><sp/>|&quot;,<sp/>pulse.code,<sp/>pulse.value.sival_int);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal::HALSensorik::printSensorChanges(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((val<sp/>&amp;<sp/><ref refid="_addresses_8h_1add6d2693f5d356b091088437148f939b" kindref="member">BIT_0</ref>)<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>!<ref refid="_h_a_l_sensorik_8cpp_1a153247227e81158a596178fa8572d2f5" kindref="member">portB_0</ref>)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Werkstueck<sp/>in<sp/>Einlauf&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_h_a_l_sensorik_8cpp_1a153247227e81158a596178fa8572d2f5" kindref="member">portB_0</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((val<sp/>&amp;<sp/>BIT_0)<sp/>&amp;&amp;<sp/><ref refid="_h_a_l_sensorik_8cpp_1a153247227e81158a596178fa8572d2f5" kindref="member">portB_0</ref>)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Werkstueck<sp/>nicht<sp/>mehr<sp/>in<sp/>Einlauf&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_h_a_l_sensorik_8cpp_1a153247227e81158a596178fa8572d2f5" kindref="member">portB_0</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((val<sp/>&amp;<sp/><ref refid="_addresses_8h_1aec9fa7211b7c9a686f2cd522cad7989d" kindref="member">BIT_1</ref>)<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>!<ref refid="_h_a_l_sensorik_8cpp_1a2d4d7151d6df474b0eb2e0835e7f7613" kindref="member">portB_1</ref>)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Werkstueck<sp/>in<sp/>Hoehenmessung&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;AD<sp/>PORT:<sp/>%d<sp/>\n&quot;</highlight><highlight class="normal">,getHeight());</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_h_a_l_sensorik_8cpp_1a2d4d7151d6df474b0eb2e0835e7f7613" kindref="member">portB_1</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((val<sp/>&amp;<sp/>BIT_1)<sp/>&amp;&amp;<sp/><ref refid="_h_a_l_sensorik_8cpp_1a2d4d7151d6df474b0eb2e0835e7f7613" kindref="member">portB_1</ref>)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Werkstueck<sp/>nicht<sp/>mehr<sp/>in<sp/>Hoehenmessung&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_h_a_l_sensorik_8cpp_1a2d4d7151d6df474b0eb2e0835e7f7613" kindref="member">portB_1</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((val<sp/>&amp;<sp/>BIT_2)<sp/>&amp;&amp;<sp/>!portB_2)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Werkstueck<sp/>im<sp/>Toleranzbereich&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portB_2<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(((val<sp/>&amp;<sp/>BIT_2)<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>portB_2)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Werkstueck<sp/>nicht<sp/>im<sp/>Toleranzbereich&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portB_2<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((val<sp/>&amp;<sp/><ref refid="_addresses_8h_1a2cad0186598ab53983a3bca9b09b0a51" kindref="member">BIT_3</ref>)<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>!<ref refid="_h_a_l_sensorik_8cpp_1aadf44c74a3a9e00c979511323567712f" kindref="member">portB_3</ref>)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Werkstueck<sp/>in<sp/>Weiche&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_h_a_l_sensorik_8cpp_1aadf44c74a3a9e00c979511323567712f" kindref="member">portB_3</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((val<sp/>&amp;<sp/>BIT_3)<sp/>&amp;&amp;<sp/><ref refid="_h_a_l_sensorik_8cpp_1aadf44c74a3a9e00c979511323567712f" kindref="member">portB_3</ref>)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Werkstueck<sp/>nicht<sp/>mehr<sp/>in<sp/>Weiche&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_h_a_l_sensorik_8cpp_1aadf44c74a3a9e00c979511323567712f" kindref="member">portB_3</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((val<sp/>&amp;<sp/><ref refid="_addresses_8h_1a3506434dff748a6be0d75a338a95e673" kindref="member">BIT_4</ref>)<sp/>&amp;&amp;<sp/>!<ref refid="_h_a_l_sensorik_8cpp_1aa920050c1f72e5d2fdef3d80d92ebca6" kindref="member">portB_4</ref>)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Werkstueck<sp/>Metall&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_h_a_l_sensorik_8cpp_1aa920050c1f72e5d2fdef3d80d92ebca6" kindref="member">portB_4</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((val<sp/>&amp;<sp/>BIT_4)<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/><ref refid="_h_a_l_sensorik_8cpp_1aa920050c1f72e5d2fdef3d80d92ebca6" kindref="member">portB_4</ref>)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Metallwerkstueck<sp/>hat<sp/>messung<sp/>verlassen&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_h_a_l_sensorik_8cpp_1aa920050c1f72e5d2fdef3d80d92ebca6" kindref="member">portB_4</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((val<sp/>&amp;<sp/><ref refid="_addresses_8h_1aae7fda97814f05bfe68c0f6bb2ef9f11" kindref="member">BIT_5</ref>)<sp/>&amp;&amp;<sp/>!<ref refid="_h_a_l_sensorik_8cpp_1a6f74a2c0170a2264035efc500e4a8415" kindref="member">portB_5</ref>)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Weiche<sp/>offen&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_h_a_l_sensorik_8cpp_1a6f74a2c0170a2264035efc500e4a8415" kindref="member">portB_5</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((val<sp/>&amp;<sp/>BIT_5)<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/><ref refid="_h_a_l_sensorik_8cpp_1a6f74a2c0170a2264035efc500e4a8415" kindref="member">portB_5</ref>)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Weiche<sp/>wieder<sp/>zu&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_h_a_l_sensorik_8cpp_1a6f74a2c0170a2264035efc500e4a8415" kindref="member">portB_5</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((val<sp/>&amp;<sp/><ref refid="_addresses_8h_1a7ecb78fe8c01d9722a06f10691495309" kindref="member">BIT_6</ref>)<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>!<ref refid="_h_a_l_sensorik_8cpp_1a4732ea72458f90f4fa391d040a8f6308" kindref="member">portB_6</ref>)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Rutsche<sp/>ist<sp/>voll&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_h_a_l_sensorik_8cpp_1a4732ea72458f90f4fa391d040a8f6308" kindref="member">portB_6</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((val<sp/>&amp;<sp/>BIT_6)<sp/>&amp;&amp;<sp/><ref refid="_h_a_l_sensorik_8cpp_1a4732ea72458f90f4fa391d040a8f6308" kindref="member">portB_6</ref>)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Rutsche<sp/>nicht<sp/>mehr<sp/>voll&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_h_a_l_sensorik_8cpp_1a4732ea72458f90f4fa391d040a8f6308" kindref="member">portB_6</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((val<sp/>&amp;<sp/><ref refid="_addresses_8h_1a4ad58adf84157aebea2a98cc9402212a" kindref="member">BIT_7</ref>)<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>!<ref refid="_h_a_l_sensorik_8cpp_1abc4af542e02c2bf1a13ab929c823d44c" kindref="member">portB_7</ref>)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Werkstueck<sp/>in<sp/>Auslauf&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_h_a_l_sensorik_8cpp_1abc4af542e02c2bf1a13ab929c823d44c" kindref="member">portB_7</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((val<sp/>&amp;<sp/>BIT_1)<sp/>&amp;&amp;<sp/><ref refid="_h_a_l_sensorik_8cpp_1abc4af542e02c2bf1a13ab929c823d44c" kindref="member">portB_7</ref>)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Werkstueck<sp/>nicht<sp/>mehr<sp/>in<sp/>Auslauf&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_h_a_l_sensorik_8cpp_1abc4af542e02c2bf1a13ab929c823d44c" kindref="member">portB_7</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>==<sp/>8)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&amp;<sp/>BIT_4)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Starttaste<sp/>gedrueckt&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portC_4<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(((val<sp/>&amp;<sp/>BIT_4)<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>portC_4)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Starttaste<sp/>losgelassen&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portC_4<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((val<sp/>&amp;<sp/>BIT_5)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Stoptaste<sp/>gedrueckt&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portC_5<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>((val<sp/>&amp;<sp/>BIT_5)<sp/>&amp;&amp;<sp/>portC_5)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Stoptaste<sp/>losgelassen&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portC_5<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&amp;<sp/>BIT_6)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Resettaste<sp/>gedrueckt&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portC_6<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(((val<sp/>&amp;<sp/>BIT_6)<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>portC_6)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;Resettaste<sp/>losgelassen&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>portC_6<sp/>=<sp/>false;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((val<sp/>&amp;<sp/>BIT_7)<sp/>==<sp/>0)<sp/>&amp;&amp;<sp/>!<ref refid="_h_a_l_sensorik_8cpp_1aca04d42cdb0529f43abaa1de8e6a2a28" kindref="member">portC_7</ref>)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;E-stop<sp/>gedrueckt&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_h_a_l_sensorik_8cpp_1aca04d42cdb0529f43abaa1de8e6a2a28" kindref="member">portC_7</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((val<sp/>&amp;<sp/>BIT_7)<sp/>&amp;&amp;<sp/><ref refid="_h_a_l_sensorik_8cpp_1aca04d42cdb0529f43abaa1de8e6a2a28" kindref="member">portC_7</ref>)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;E-stop<sp/>nicht<sp/>mehr<sp/>gedrueckt&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_h_a_l_sensorik_8cpp_1aca04d42cdb0529f43abaa1de8e6a2a28" kindref="member">portC_7</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>hal::HALSensorik::set_timer(){</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer_t<sp/>timerid;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">itimerspec<sp/>timer;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sigevent<sp/><sp/><sp/>timerEvent;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Init<sp/>Pulse<sp/>and<sp/>creat<sp/>Timer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SIGEV_PULSE_INIT<sp/>(&amp;timerEvent,<sp/>isr_coid,<sp/>SIGEV_PULSE_PRIO_INHERIT,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timer_create<sp/>(CLOCK_REALTIME,<sp/>&amp;timerEvent,<sp/>&amp;timerid)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logger(ERROR)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>create<sp/>Timer<sp/>for<sp/>Height<sp/>Sensor&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fill<sp/>Timerstructure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer.it_value.tv_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer.it_value.tv_nsec<sp/>=<sp/>DURATION_HEIGHT_MEASUREMENT;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer.it_interval.tv_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer.it_interval.tv_nsec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timer_settime<sp/>(timerid,<sp/>0,<sp/>&amp;timer,<sp/>NULL);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1_h_a_l_sensorik_1a80e7e02d7386fddda972a5e0204adda7" kindref="member">hal::HALSensorik::getHeight</ref>(){</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>heigth<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out8(<ref refid="_addresses_8h_1ac349c0bdc8c9da24119671c4d1b438cc" kindref="member">AIO_PORT_A</ref>,<sp/><ref refid="_addresses_8h_1af807e3e9966e5f9418fb557211d1d0c2" kindref="member">AIO_GET_VAL</ref>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>1&lt;<sp/>50;<sp/>i++){</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(in8(<ref refid="_addresses_8h_1a83a3ac2016039af1774c2a6432e0a75a" kindref="member">AIO_BASE</ref>)<sp/>&amp;<sp/>1&lt;&lt;7<sp/>){</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heigth<sp/>=<sp/>in16(<ref refid="_addresses_8h_1ac349c0bdc8c9da24119671c4d1b438cc" kindref="member">AIO_PORT_A</ref>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>heigth;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAL/HALSensorik.cpp"/>
  </compounddef>
</doxygen>
