<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_h_a_w_thread_8cpp" kind="file">
    <compoundname>HAWThread.cpp</compoundname>
    <includes refid="_h_a_w_thread_8h" local="yes">HAWThread.h</includes>
    <incdepgraph>
      <node id="200">
        <label>pthread.h</label>
      </node>
      <node id="199">
        <label>iostream.h</label>
      </node>
      <node id="198">
        <label>HAWThread.h</label>
        <link refid="_h_a_w_thread_8h"/>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="201" relation="include">
        </childnode>
      </node>
      <node id="201">
        <label>sys/neutrino.h</label>
      </node>
      <node id="197">
        <label>Software/SE2P2/HAW/HAWThread.cpp</label>
        <link refid="HAWThread.cpp"/>
        <childnode refid="198" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacethread">thread</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3"><highlight class="comment">*<sp/><sp/><sp/><sp/>Hochschule<sp/>für Angewandte<sp/>Wissenschaften<sp/>Hamburg<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/><sp/><sp/><sp/>WP</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/><sp/><sp/><sp/>Effiziente<sp/>Datenstrukturen<sp/>in<sp/>C++<sp/>für verteilte<sp/>Echtzeitprogrammierung</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/><sp/><sp/><sp/>Prof.<sp/>Dr.<sp/>Stephan<sp/>Pareigis<sp/><sp/></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/><sp/><sp/><sp/>Thread<sp/>Class<sp/>Implementation<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_h_a_w_thread_8h" kindref="compound">HAWThread.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="namespacethread" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">thread</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HAWThread::GLOBAL_EXIT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="classthread_1_1_h_a_w_thread_1a7ae3280c8aee6ae6536c736a20d92e8d" kindref="member">HAWThread::HAWThread</ref>()<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal">:<sp/>bRunning_(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">,<sp/>LOCAL_EXIT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="classthread_1_1_h_a_w_thread_1a84706dda23aa384a43ced901381e795b" kindref="member">HAWThread::~HAWThread</ref>()</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>ThreadDestroy(tid_<sp/>,<sp/>0<sp/>,<sp/>0);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="classthread_1_1_h_a_w_thread_1ae08d268c337511a1e67fbbeefcb1e89d" kindref="member">HAWThread::start</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bRunning_<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>bRunning_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><ref refid="classthread_1_1_h_a_w_thread_1ab692f3a55b92623653d8213793ba4ebb" kindref="member">Arg</ref>(arg);<sp/></highlight><highlight class="comment">//<sp/>store<sp/>user<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code<sp/>=<sp/>pthread_create(&amp;tid_,<sp/>NULL,<sp/>(<ref refid="classthread_1_1_h_a_w_thread_1a044da2e1a8884a3e2764f9f1863863c7" kindref="member">HAWThread::entryPoint</ref>),<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>code<sp/>!=<sp/>0<sp/>)<sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Thread<sp/>could<sp/>not<sp/>be<sp/>started.&quot;</highlight><highlight class="normal">&lt;&lt;endl;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classthread_1_1_h_a_w_thread_1ae8a89c83fd7e9b9a712c19f636ab2638" kindref="member">HAWThread::stop</ref>()</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>LOCAL_EXIT<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classthread_1_1_h_a_w_thread_1a18f2a0cc61833e98b18e56ea541fa38b" kindref="member">HAWThread::hold</ref>()</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>ThreadCtl(_NTO_TCTL_ONE_THREAD_HOLD,<sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>tid_);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classthread_1_1_h_a_w_thread_1a4c480261e3236c90c8de73be55650ba4" kindref="member">HAWThread::cont</ref>()</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>ThreadCtl(_NTO_TCTL_ONE_THREAD_CONT,<sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>tid_);</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classthread_1_1_h_a_w_thread_1a9a3e17be59877d350e310eb19c52679b" kindref="member">HAWThread::run</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>arg)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><ref refid="classthread_1_1_h_a_w_thread_1ae565cb73c096b246664bd2474b9c8907" kindref="member">execute</ref>(<sp/>arg<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><ref refid="classthread_1_1_h_a_w_thread_1a843ee9493a41cec7e932fdec67a3b244" kindref="member">shutdown</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="classthread_1_1_h_a_w_thread_1a044da2e1a8884a3e2764f9f1863863c7" kindref="member">HAWThread::entryPoint</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pthis)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><ref refid="classthread_1_1_h_a_w_thread" kindref="compound">HAWThread</ref>*<sp/>pt<sp/>=<sp/>(<ref refid="classthread_1_1_h_a_w_thread" kindref="compound">HAWThread</ref>*)pthis;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>pt-&gt;<ref refid="classthread_1_1_h_a_w_thread_1a9a3e17be59877d350e310eb19c52679b" kindref="member">run</ref>(<sp/>pt-&gt;<ref refid="classthread_1_1_h_a_w_thread_1ab692f3a55b92623653d8213793ba4ebb" kindref="member">Arg</ref>()<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classthread_1_1_h_a_w_thread_1a4732efa3445c499f1723971acc07863f" kindref="member">HAWThread::join</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="72"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_join(<sp/>tid_<sp/>,<sp/>NULL<sp/>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.cpp"/>
  </compounddef>
</doxygen>
