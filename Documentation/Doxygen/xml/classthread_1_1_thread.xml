<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classthread_1_1_thread" kind="class" prot="public">
    <compoundname>thread::Thread</compoundname>
    <basecompoundref refid="classthread_1_1_h_a_w_thread" prot="public" virt="non-virtual">thread::HAWThread</basecompoundref>
    <includes refid="_thread_8h" local="no">Thread.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classthread_1_1_thread_1ade4761946b42cc3d1a32fc04f5405f48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>thread::Thread::Thread</definition>
        <argsstring>()</argsstring>
        <name>Thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/Thread.h" line="23" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/Thread.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_thread_1a5cc06f9b6a7fe494e0f64e4476117255" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>thread::Thread::~Thread</definition>
        <argsstring>()</argsstring>
        <name>~Thread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/Thread.h" line="24" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/Thread.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_thread_1a2444c1af4f269dacaead0ec8ee266123" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void thread::Thread::execute</definition>
        <argsstring>(void *arg)</argsstring>
        <name>execute</name>
        <reimplements refid="classthread_1_1_h_a_w_thread_1ae565cb73c096b246664bd2474b9c8907">execute</reimplements>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>to be implemented in the derived class. The application programmer has to write his own loop. He can check bool <ref refid="classthread_1_1_h_a_w_thread_1a46e9f127856f36917b3a8a345b7be5ee" kindref="member">isStopped()</ref> to see if the thread should exit the loop. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/Thread.h" line="27" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/Thread.cpp" bodystart="46" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_thread_1abda49d1f648def9611927897cbae668d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void thread::Thread::shutdown</definition>
        <argsstring>()</argsstring>
        <name>shutdown</name>
        <reimplements refid="classthread_1_1_h_a_w_thread_1a843ee9493a41cec7e932fdec67a3b244">shutdown</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>this function must be implemented in the derived class. The function is called once after the thread has been stopped. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/Thread.h" line="28" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/Thread.cpp" bodystart="37" bodyend="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="17">
        <label>thread::HAWThread</label>
        <link refid="classthread_1_1_h_a_w_thread"/>
      </node>
      <node id="16">
        <label>thread::Thread</label>
        <link refid="classthread_1_1_thread"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="19">
        <label>thread::HAWThread</label>
        <link refid="classthread_1_1_h_a_w_thread"/>
      </node>
      <node id="18">
        <label>thread::Thread</label>
        <link refid="classthread_1_1_thread"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/Thread.h" line="21" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/Thread.h" bodystart="21" bodyend="30"/>
    <listofallmembers>
      <member refid="classthread_1_1_h_a_w_thread_1ab692f3a55b92623653d8213793ba4ebb" prot="protected" virt="non-virtual"><scope>thread::Thread</scope><name>Arg</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a368c07a801fb8f5e7bb181d2453df4be" prot="protected" virt="non-virtual"><scope>thread::Thread</scope><name>Arg</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a4c480261e3236c90c8de73be55650ba4" prot="public" virt="non-virtual"><scope>thread::Thread</scope><name>cont</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a044da2e1a8884a3e2764f9f1863863c7" prot="protected" virt="non-virtual"><scope>thread::Thread</scope><name>entryPoint</name></member>
      <member refid="classthread_1_1_thread_1a2444c1af4f269dacaead0ec8ee266123" prot="public" virt="virtual"><scope>thread::Thread</scope><name>execute</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a7ae3280c8aee6ae6536c736a20d92e8d" prot="public" virt="non-virtual"><scope>thread::Thread</scope><name>HAWThread</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a18f2a0cc61833e98b18e56ea541fa38b" prot="public" virt="non-virtual"><scope>thread::Thread</scope><name>hold</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a46e9f127856f36917b3a8a345b7be5ee" prot="protected" virt="non-virtual"><scope>thread::Thread</scope><name>isStopped</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a4732efa3445c499f1723971acc07863f" prot="public" virt="non-virtual"><scope>thread::Thread</scope><name>join</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a9a3e17be59877d350e310eb19c52679b" prot="protected" virt="non-virtual"><scope>thread::Thread</scope><name>run</name></member>
      <member refid="classthread_1_1_thread_1abda49d1f648def9611927897cbae668d" prot="public" virt="virtual"><scope>thread::Thread</scope><name>shutdown</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a5124385e940aa8d52510a4be10af173c" prot="protected" virt="non-virtual"><scope>thread::Thread</scope><name>shutdownAll</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1ae08d268c337511a1e67fbbeefcb1e89d" prot="public" virt="non-virtual"><scope>thread::Thread</scope><name>start</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1ae8a89c83fd7e9b9a712c19f636ab2638" prot="public" virt="non-virtual"><scope>thread::Thread</scope><name>stop</name></member>
      <member refid="classthread_1_1_thread_1ade4761946b42cc3d1a32fc04f5405f48" prot="public" virt="non-virtual"><scope>thread::Thread</scope><name>Thread</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a84706dda23aa384a43ced901381e795b" prot="public" virt="virtual"><scope>thread::Thread</scope><name>~HAWThread</name></member>
      <member refid="classthread_1_1_thread_1a5cc06f9b6a7fe494e0f64e4476117255" prot="public" virt="virtual"><scope>thread::Thread</scope><name>~Thread</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
