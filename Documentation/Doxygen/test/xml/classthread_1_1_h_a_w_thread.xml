<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="classthread_1_1_h_a_w_thread" kind="class" prot="public" abstract="yes">
    <compoundname>thread::HAWThread</compoundname>
    <derivedcompoundref refid="classthread_1_1_thread" prot="public" virt="non-virtual">thread::Thread</derivedcompoundref>
    <includes refid="_h_a_w_thread_8h" local="no">HAWThread.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classthread_1_1_h_a_w_thread_1ad02b452b5d3b3d14f262fa67a5d5b0cb" prot="private" static="no" mutable="no">
        <type>pthread_t</type>
        <definition>pthread_t thread::HAWThread::tid_</definition>
        <argsstring></argsstring>
        <name>tid_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>thread id to be passed to pthread_create </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="107" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classthread_1_1_h_a_w_thread_1a84f60b0f95cf76e0e49fff2ddd20a4ed" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>volatile bool thread::HAWThread::bRunning_</definition>
        <argsstring></argsstring>
        <name>bRunning_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>flag to check if thread is running </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="108" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classthread_1_1_h_a_w_thread_1a2e278132c308c602e370ef9bb8899eef" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* thread::HAWThread::Arg_</definition>
        <argsstring></argsstring>
        <name>Arg_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>argument stored locally. To be passed to user function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="109" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classthread_1_1_h_a_w_thread_1af3812b4a1918fcd006cb0fe75cb4a23f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool thread::HAWThread::LOCAL_EXIT</definition>
        <argsstring></argsstring>
        <name>LOCAL_EXIT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>stops the local thread, if isStopped is checked. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="111" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classthread_1_1_h_a_w_thread_1a149b1478adb48ebcfbfa06fe8eeeef03" prot="private" static="yes" mutable="no">
        <type>bool</type>
        <definition>volatile bool thread::HAWThread::GLOBAL_EXIT</definition>
        <argsstring></argsstring>
        <name>GLOBAL_EXIT</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>if true, then all threads will close, if function isStopped is checked. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="110" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classthread_1_1_h_a_w_thread_1a7ae3280c8aee6ae6536c736a20d92e8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>thread::HAWThread::HAWThread</definition>
        <argsstring>()</argsstring>
        <name>HAWThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor. Initializes members </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="36" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.cpp" bodystart="23" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_h_a_w_thread_1a84706dda23aa384a43ced901381e795b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>thread::HAWThread::~HAWThread</definition>
        <argsstring>()</argsstring>
        <name>~HAWThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor. Calls ThreadDestroy. This should shutdown the thread more carefully. <simplesect kind="warning"><para>needs some work! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="42" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_h_a_w_thread_1ae08d268c337511a1e67fbbeefcb1e89d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void thread::HAWThread::start</definition>
        <argsstring>(void *arg)</argsstring>
        <name>start</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starts the <ref refid="classthread_1_1_thread" kindref="compound">Thread</ref>. <simplesect kind="warning"><para>start must be called always from the same context as <ref refid="classthread_1_1_h_a_w_thread_1ae8a89c83fd7e9b9a712c19f636ab2638" kindref="member">stop()</ref>. </para><simplesectsep/><para>If <ref refid="classthread_1_1_thread" kindref="compound">Thread</ref> is already running, <ref refid="classthread_1_1_h_a_w_thread_1ae08d268c337511a1e67fbbeefcb1e89d" kindref="member">start()</ref> is a NOP. <itemizedlist>
<listitem><para>argument is stored locally as a member. </para></listitem>
</itemizedlist>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="49" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.cpp" bodystart="34" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_h_a_w_thread_1ae8a89c83fd7e9b9a712c19f636ab2638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void thread::HAWThread::stop</definition>
        <argsstring>()</argsstring>
        <name>stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the internal flag LOCAL_EXIT to true. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="53" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.cpp" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_h_a_w_thread_1a4732efa3445c499f1723971acc07863f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void thread::HAWThread::join</definition>
        <argsstring>() const </argsstring>
        <name>join</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calls join on the thread. <simplesect kind="warning"><para>must be called from the same context as start. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="58" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_h_a_w_thread_1a18f2a0cc61833e98b18e56ea541fa38b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void thread::HAWThread::hold</definition>
        <argsstring>()</argsstring>
        <name>hold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function holds (suspends) the thread. It makes a ThreadCtrl call. It shall be used if the thread is not being used for a while but may be used later </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="64" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.cpp" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_h_a_w_thread_1a4c480261e3236c90c8de73be55650ba4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void thread::HAWThread::cont</definition>
        <argsstring>()</argsstring>
        <name>cont</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function continues (resumes) the thread. It makes a ThreadCtrl call. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="68" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.cpp" bodystart="52" bodyend="55"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classthread_1_1_h_a_w_thread_1a9a3e17be59877d350e310eb19c52679b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void thread::HAWThread::run</definition>
        <argsstring>(void *arg)</argsstring>
        <name>run</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is called when the thread is started. It calls execute an shutdown which are the user functions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="74" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.cpp" bodystart="58" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_h_a_w_thread_1ae565cb73c096b246664bd2474b9c8907" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void thread::HAWThread::execute</definition>
        <argsstring>(void *)=0</argsstring>
        <name>execute</name>
        <reimplementedby refid="classthread_1_1_thread_1a2444c1af4f269dacaead0ec8ee266123">execute</reimplementedby>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>to be implemented in the derived class. The application programmer has to write his own loop. He can check bool <ref refid="classthread_1_1_h_a_w_thread_1a46e9f127856f36917b3a8a345b7be5ee" kindref="member">isStopped()</ref> to see if the thread should exit the loop. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_h_a_w_thread_1a843ee9493a41cec7e932fdec67a3b244" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void thread::HAWThread::shutdown</definition>
        <argsstring>()=0</argsstring>
        <name>shutdown</name>
        <reimplementedby refid="classthread_1_1_thread_1abda49d1f648def9611927897cbae668d">shutdown</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>this function must be implemented in the derived class. The function is called once after the thread has been stopped. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_h_a_w_thread_1ab692f3a55b92623653d8213793ba4ebb" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* thread::HAWThread::Arg</definition>
        <argsstring>() const </argsstring>
        <name>Arg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>used internally to pass the argument. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="93" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_h_a_w_thread_1a368c07a801fb8f5e7bb181d2453df4be" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void thread::HAWThread::Arg</definition>
        <argsstring>(void *a)</argsstring>
        <name>Arg</name>
        <param>
          <type>void *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>used internally to set the arguement. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="97" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_h_a_w_thread_1a46e9f127856f36917b3a8a345b7be5ee" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool thread::HAWThread::isStopped</definition>
        <argsstring>() const </argsstring>
        <name>isStopped</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the stop-status of the thread. This function should be checked by the user function execute regularly. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="103" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classthread_1_1_h_a_w_thread_1a5124385e940aa8d52510a4be10af173c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void thread::HAWThread::shutdownAll</definition>
        <argsstring>()</argsstring>
        <name>shutdownAll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets the GLOBAL_EXIT flag to true. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="105" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" bodystart="105" bodyend="105"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classthread_1_1_h_a_w_thread_1a044da2e1a8884a3e2764f9f1863863c7" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * thread::HAWThread::entryPoint</definition>
        <argsstring>(void *)</argsstring>
        <name>entryPoint</name>
        <param>
          <type>void *</type>
          <defname>pthis</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="75" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.cpp" bodystart="64" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>thread::HAWThread</label>
        <link refid="classthread_1_1_h_a_w_thread"/>
      </node>
      <node id="3">
        <label>thread::Thread</label>
        <link refid="classthread_1_1_thread"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" line="31" column="1" bodyfile="C:/Users/Nata/Documents/SEP2/sourcetree/Software/SE2P2/HAW/HAWThread.h" bodystart="30" bodyend="112"/>
    <listofallmembers>
      <member refid="classthread_1_1_h_a_w_thread_1ab692f3a55b92623653d8213793ba4ebb" prot="protected" virt="non-virtual"><scope>thread::HAWThread</scope><name>Arg</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a368c07a801fb8f5e7bb181d2453df4be" prot="protected" virt="non-virtual"><scope>thread::HAWThread</scope><name>Arg</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a2e278132c308c602e370ef9bb8899eef" prot="private" virt="non-virtual"><scope>thread::HAWThread</scope><name>Arg_</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a84f60b0f95cf76e0e49fff2ddd20a4ed" prot="private" virt="non-virtual"><scope>thread::HAWThread</scope><name>bRunning_</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a4c480261e3236c90c8de73be55650ba4" prot="public" virt="non-virtual"><scope>thread::HAWThread</scope><name>cont</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a044da2e1a8884a3e2764f9f1863863c7" prot="protected" virt="non-virtual"><scope>thread::HAWThread</scope><name>entryPoint</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1ae565cb73c096b246664bd2474b9c8907" prot="protected" virt="pure-virtual"><scope>thread::HAWThread</scope><name>execute</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a149b1478adb48ebcfbfa06fe8eeeef03" prot="private" virt="non-virtual"><scope>thread::HAWThread</scope><name>GLOBAL_EXIT</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a7ae3280c8aee6ae6536c736a20d92e8d" prot="public" virt="non-virtual"><scope>thread::HAWThread</scope><name>HAWThread</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a18f2a0cc61833e98b18e56ea541fa38b" prot="public" virt="non-virtual"><scope>thread::HAWThread</scope><name>hold</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a46e9f127856f36917b3a8a345b7be5ee" prot="protected" virt="non-virtual"><scope>thread::HAWThread</scope><name>isStopped</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a4732efa3445c499f1723971acc07863f" prot="public" virt="non-virtual"><scope>thread::HAWThread</scope><name>join</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1af3812b4a1918fcd006cb0fe75cb4a23f" prot="private" virt="non-virtual"><scope>thread::HAWThread</scope><name>LOCAL_EXIT</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a9a3e17be59877d350e310eb19c52679b" prot="protected" virt="non-virtual"><scope>thread::HAWThread</scope><name>run</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a843ee9493a41cec7e932fdec67a3b244" prot="protected" virt="pure-virtual"><scope>thread::HAWThread</scope><name>shutdown</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a5124385e940aa8d52510a4be10af173c" prot="protected" virt="non-virtual"><scope>thread::HAWThread</scope><name>shutdownAll</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1ae08d268c337511a1e67fbbeefcb1e89d" prot="public" virt="non-virtual"><scope>thread::HAWThread</scope><name>start</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1ae8a89c83fd7e9b9a712c19f636ab2638" prot="public" virt="non-virtual"><scope>thread::HAWThread</scope><name>stop</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1ad02b452b5d3b3d14f262fa67a5d5b0cb" prot="private" virt="non-virtual"><scope>thread::HAWThread</scope><name>tid_</name></member>
      <member refid="classthread_1_1_h_a_w_thread_1a84706dda23aa384a43ced901381e795b" prot="public" virt="virtual"><scope>thread::HAWThread</scope><name>~HAWThread</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
